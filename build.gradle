project.ext {
    PROTOBUF_VERSION = '3.0.0-beta-1'
    PROTOBUF_DEPENDENCY = "com.google.protobuf:protoc:${project.PROTOBUF_VERSION}"
    SPINE_VERSION = '0.2-SNAPSHOT'
}

buildscript {
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.0'
    }
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'jacoco'

    group = 'org.spine3.jdbc'
    version = '0.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.google.protobuf'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    // Set Java home to point to JDK7 in gradle.properties file.
    //
    // For Mac OS X, it looks like this:
    //
    // # suppress inspection "UnusedProperty"
    // org.gradle.java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home/

    repositories {
        mavenCentral()
        maven {
            url = 'http://maven.teamdev.com/repository/spine-snapshots'
        }
    }

    dependencies {
        // Spine
        compile group: 'org.spine3', name: 'server', version: project.SPINE_VERSION, changing: true

        // Guava
        compile group: 'com.google.guava', name: 'guava', version: '19.0'

        // Findbugs
        compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

        // SLF4J
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
        compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.12'

        // Protobuf
        compile group: 'com.google.protobuf', name: 'protobuf-java', version: project.PROTOBUF_VERSION
        compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: project.PROTOBUF_VERSION

        // JUnit
        testCompile(group: 'junit', name: 'junit', version: '4.12') {
            exclude(module: 'hamcrest-core')
        }
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    }

    final String SRC_ROOT_DIR = "$projectDir/src"
    final String GEN_ROOT_DIR = "$projectDir/generated"
    final String GEN_MAIN_JAVA_DIR = "${GEN_ROOT_DIR}/main/java"
    final String GEN_TEST_JAVA_DIR = "${GEN_ROOT_DIR}/test/java"

    sourceSets {
        main {
            proto.srcDirs = ["${SRC_ROOT_DIR}/main/proto"]
            java.srcDirs = [GEN_MAIN_JAVA_DIR, "${SRC_ROOT_DIR}/main/java"]
            resources.srcDirs = ["${GEN_ROOT_DIR}/main/resources"]
        }
        test {
            proto.srcDirs = ["${SRC_ROOT_DIR}/test/proto"]
            java.srcDirs = [GEN_TEST_JAVA_DIR, "${SRC_ROOT_DIR}/test/java"]
            resources.srcDirs = ["${GEN_ROOT_DIR}/test/resources"]
        }
    }

    protobuf {
        generatedFilesBaseDir = "$projectDir/generated"
        protoc {
            artifact = project.PROTOBUF_DEPENDENCY
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    check.dependsOn jacocoTestReport
}
