buildscript {
    // Define the versions of the library and its dependencies.
    // As long as `buildscript` section is always evaluated first, we need to apply
    // `version.gradle` explicitly here.
    apply from: "$rootDir/config/gradle/dependencies.gradle"
    apply from: "$rootDir/version.gradle"
}

ext {
    publishPlugin = "$rootDir/config/scripts/publish.gradle"
    credentialsPropertyFile = 'credentials.properties'
    projectsToPublish = ['rdbms']
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'jacoco'

    group = 'io.spine'
    version = versionToPublish
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // Set Java home to point to JDK8 in gradle.properties file.
    //
    // For Mac OS X, it looks like this:
    //
    // # suppress inspection "UnusedProperty"
    // org.gradle.java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/

    repositories {
        mavenLocal()
        mavenCentral()

        maven { url = repos.spine }
        maven { url = repos.spineSnapshots }
    }

    dependencies {

        // Exclude transient dependencies from Spine
        final def excludes = {
            exclude group: 'com.google.protobuf', module: 'protobuf-lite'
            exclude group: 'io.grpc'
        }

        // Spine
        implementation group: 'io.spine', name: 'spine-server', version: spineCoreVersion, excludes

        implementation group: 'io.spine', name: 'spine-testutil-server', version: spineCoreVersion,
                excludes

        testImplementation group: 'io.spine', name: 'spine-server', version: spineCoreVersion,
                classifier: 'test', excludes


        testImplementation group: 'io.spine', name: 'spine-testlib', version: spineBaseVersion

        implementation deps.build.guava
        implementation deps.build.jsr305Annotations
        implementation deps.build.checkerAnnotations
        implementation deps.build.errorProneAnnotations
        implementation deps.build.slf4j

        testImplementation deps.test.junit5Api
        testImplementation deps.test.junit5Runner
        testImplementation deps.test.hamcrest
        testImplementation deps.test.mockito
        testImplementation deps.test.guavaTestlib
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier "sources"
    }

    task testOutputJar(type: Jar) {
        from sourceSets.test.output
        classifier "test"
    }

    check.dependsOn jacocoTestReport
}

apply from: publishPlugin
